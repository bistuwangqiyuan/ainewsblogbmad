---
interface Props {
    feedbacks: Array<{
        id: string;
        type: 'bug' | 'feature' | 'suggestion' | 'other';
        title: string;
        content: string;
        status: 'pending' | 'processing' | 'resolved' | 'rejected';
        attachments?: string[];
        contact?: string;
        created_at: string;
        updated_at?: string;
        admin_reply?: string;
    }>;
    currentPage: number;
    totalPages: number;
    onViewDetail: (id: string) => void;
    onPageChange: (page: number) => void;
    onFilter: (status: string) => void;
    onSearch: (query: string) => void;
}

const { feedbacks, currentPage, totalPages, onViewDetail, onPageChange, onFilter, onSearch } = Astro.props;

// 获取反馈类型图标和颜色
function getFeedbackIcon(type: string) {
    switch (type) {
        case 'bug':
            return {
                icon: `<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"/>
                </svg>`,
                color: 'text-red-500',
                label: 'Bug 报告'
            };
        case 'feature':
            return {
                icon: `<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd"/>
                </svg>`,
                color: 'text-green-500',
                label: '功能建议'
            };
        case 'suggestion':
            return {
                icon: `<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z" clip-rule="evenodd"/>
                </svg>`,
                color: 'text-blue-500',
                label: '改进建议'
            };
        case 'other':
            return {
                icon: `<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z" clip-rule="evenodd"/>
                </svg>`,
                color: 'text-gray-500',
                label: '其他'
            };
        default:
            return {
                icon: `<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"/>
                </svg>`,
                color: 'text-gray-500',
                label: '未知类型'
            };
    }
}

// 获取状态标签样式
function getStatusBadge(status: string) {
    switch (status) {
        case 'pending':
            return {
                class: 'bg-yellow-100 text-yellow-800',
                label: '待处理'
            };
        case 'processing':
            return {
                class: 'bg-blue-100 text-blue-800',
                label: '处理中'
            };
        case 'resolved':
            return {
                class: 'bg-green-100 text-green-800',
                label: '已解决'
            };
        case 'rejected':
            return {
                class: 'bg-red-100 text-red-800',
                label: '已拒绝'
            };
        default:
            return {
                class: 'bg-gray-100 text-gray-800',
                label: '未知状态'
            };
    }
}
---

<div class="bg-gray-800 rounded-lg p-6">
    <!-- 标题和统计 -->
    <div class="flex items-center justify-between mb-6">
        <div>
            <h2 class="text-xl font-semibold text-white mb-1">反馈历史</h2>
            <p class="text-gray-400 text-sm">
                共 {feedbacks.length} 条反馈
            </p>
        </div>
        <div class="flex items-center gap-2">
            <button class="px-3 py-1 text-sm bg-blue-600 hover:bg-blue-700 text-white rounded transition-colors" onclick="exportFeedback()"> 导出反馈 </button>
        </div>
    </div>

    <!-- 搜索和筛选 -->
    <div class="flex flex-col sm:flex-row gap-4 mb-6">
        <div class="flex-1">
            <div class="relative">
                <input
                    type="text"
                    placeholder="搜索反馈内容..."
                    class="w-full px-4 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:border-blue-500"
                    onkeyup="searchFeedback(this.value)"
                />
                <svg class="absolute right-3 top-2.5 w-5 h-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
                    <path
                        fill-rule="evenodd"
                        d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"
                        clip-rule="evenodd"></path>
                </svg>
            </div>
        </div>
        <div class="flex gap-2">
            <select
                class="px-3 py-2 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:border-blue-500"
                onchange="filterFeedback(this.value)"
            >
                <option value="">全部状态</option>
                <option value="pending">待处理</option>
                <option value="processing">处理中</option>
                <option value="resolved">已解决</option>
                <option value="rejected">已拒绝</option>
            </select>
        </div>
    </div>

    <!-- 反馈列表 -->
    <div class="space-y-4">
        {
            feedbacks.length === 0 ? (
                <div class="text-center py-12">
                    <svg class="w-16 h-16 text-gray-600 mx-auto mb-4" fill="currentColor" viewBox="0 0 20 20">
                        <path
                            fill-rule="evenodd"
                            d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z"
                            clip-rule="evenodd"
                        />
                    </svg>
                    <p class="text-gray-400">暂无反馈记录</p>
                </div>
            ) : (
                feedbacks.map((feedback) => {
                    const statusBadge = getStatusBadge(feedback.status);
                    const typeIcon = getFeedbackIcon(feedback.type);

                    return (
                        <div
                            class="p-4 bg-gray-700 rounded-lg border-l-4 transition-all cursor-pointer hover:bg-gray-600"
                            data-id={feedback.id}
                            data-status={feedback.status}
                        >
                            <div class="flex items-start gap-3">
                                <div class={`flex-shrink-0 ${typeIcon.color}`}>
                                    <Fragment set:html={typeIcon.icon} />
                                </div>
                                <div class="flex-1 min-w-0">
                                    <div class="flex items-center justify-between mb-2">
                                        <div class="flex items-center gap-2">
                                            <h3 class="text-sm font-medium text-white truncate">{feedback.title}</h3>
                                            <span class={`inline-flex items-center px-2 py-0.5 rounded text-xs font-medium ${statusBadge.class}`}>
                                                {statusBadge.label}
                                            </span>
                                        </div>
                                        <div class="flex items-center gap-2">
                                            {feedback.attachments && feedback.attachments.length > 0 && (
                                                <span class="text-xs text-gray-400 flex items-center gap-1">
                                                    <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 20 20">
                                                        <path
                                                            fill-rule="evenodd"
                                                            d="M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z"
                                                            clip-rule="evenodd"
                                                        />
                                                    </svg>
                                                    {feedback.attachments.length}
                                                </span>
                                            )}
                                            <button
                                                class="text-xs text-blue-400 hover:text-blue-300 transition-colors"
                                                onclick={`viewFeedbackDetail('${feedback.id}')`}
                                            >
                                                查看详情
                                            </button>
                                        </div>
                                    </div>
                                    <p class="text-sm text-gray-300 mb-2 line-clamp-2">{feedback.content}</p>
                                    <div class="flex items-center justify-between text-xs text-gray-400">
                                        <span>{new Date(feedback.created_at).toLocaleString('zh-CN')}</span>
                                        <span class={`px-2 py-0.5 rounded ${typeIcon.color} bg-opacity-20`}>{typeIcon.label}</span>
                                    </div>
                                    {feedback.admin_reply && (
                                        <div class="mt-3 p-3 bg-gray-600 rounded-lg">
                                            <div class="flex items-center gap-2 mb-2">
                                                <svg class="w-4 h-4 text-green-400" fill="currentColor" viewBox="0 0 20 20">
                                                    <path
                                                        fill-rule="evenodd"
                                                        d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z"
                                                        clip-rule="evenodd"
                                                    />
                                                </svg>
                                                <span class="text-xs font-medium text-green-400">管理员回复</span>
                                            </div>
                                            <p class="text-sm text-gray-300">{feedback.admin_reply}</p>
                                        </div>
                                    )}
                                </div>
                            </div>
                        </div>
                    );
                })
            )
        }
    </div>

    <!-- 分页 -->
    {
        totalPages > 1 && (
            <div class="flex items-center justify-center gap-2 mt-6">
                <button
                    class={`px-3 py-1 rounded ${
                        currentPage === 1 ? 'bg-gray-600 text-gray-400 cursor-not-allowed' : 'bg-gray-700 text-white hover:bg-gray-600'
                    }`}
                    onclick={`changeFeedbackPage(${currentPage - 1})`}
                    disabled={currentPage === 1}
                >
                    上一页
                </button>

                {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (
                    <button
                        class={`px-3 py-1 rounded ${page === currentPage ? 'bg-blue-600 text-white' : 'bg-gray-700 text-white hover:bg-gray-600'}`}
                        onclick={`changeFeedbackPage(${page})`}
                    >
                        {page}
                    </button>
                ))}

                <button
                    class={`px-3 py-1 rounded ${
                        currentPage === totalPages ? 'bg-gray-600 text-gray-400 cursor-not-allowed' : 'bg-gray-700 text-white hover:bg-gray-600'
                    }`}
                    onclick={`changeFeedbackPage(${currentPage + 1})`}
                    disabled={currentPage === totalPages}
                >
                    下一页
                </button>
            </div>
        )
    }
</div>

<!-- 反馈详情模态框 -->
<div id="feedback-detail-modal" class="fixed inset-0 bg-black/50 hidden z-50">
    <div class="flex items-center justify-center min-h-screen p-4">
        <div class="bg-gray-800 rounded-lg max-w-2xl w-full p-6 max-h-[80vh] overflow-y-auto">
            <div class="flex items-center justify-between mb-4">
                <h3 class="text-lg font-medium text-white">反馈详情</h3>
                <button id="close-detail" class="text-gray-400 hover:text-white transition-colors" onclick="closeFeedbackDetail()">
                    <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                        <path
                            fill-rule="evenodd"
                            d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                            clip-rule="evenodd"></path>
                    </svg>
                </button>
            </div>
            <div id="feedback-detail-content" class="space-y-4">
                <!-- 详情内容将通过JavaScript动态生成 -->
            </div>
        </div>
    </div>
</div>

<script>
    // 反馈历史交互逻辑
    document.addEventListener('DOMContentLoaded', () => {
        // 查看反馈详情
        (window as any).viewFeedbackDetail = (id: string) => {
            const event = new CustomEvent('feedbackViewDetail', { detail: { id } });
            document.dispatchEvent(event);
        };

        // 切换页面
        (window as any).changeFeedbackPage = (page: number) => {
            const event = new CustomEvent('feedbackPageChange', { detail: { page } });
            document.dispatchEvent(event);
        };

        // 筛选反馈
        (window as any).filterFeedback = (status: string) => {
            const event = new CustomEvent('feedbackFilter', { detail: { status } });
            document.dispatchEvent(event);
        };

        // 搜索反馈
        (window as any).searchFeedback = (query: string) => {
            const event = new CustomEvent('feedbackSearch', { detail: { query } });
            document.dispatchEvent(event);
        };

        // 导出反馈
        (window as any).exportFeedback = () => {
            const event = new CustomEvent('feedbackExport');
            document.dispatchEvent(event);
        };

        // 关闭详情模态框
        (window as any).closeFeedbackDetail = () => {
            const modal = document.getElementById('feedback-detail-modal');
            if (modal) {
                modal.classList.add('hidden');
            }
        };

        // 点击反馈项
        const feedbackItems = document.querySelectorAll('[data-id]');
        feedbackItems.forEach((item) => {
            item.addEventListener('click', (e) => {
                // 如果点击的是按钮，不触发详情查看事件
                if ((e.target as HTMLElement).tagName === 'BUTTON') {
                    return;
                }

                const id = (item as HTMLElement).dataset.id;
                if (id) {
                    (window as any).viewFeedbackDetail(id);
                }
            });
        });
    });
</script>
