---
interface Props {
    id: string;
    type: 'post' | 'question';
    title: string;
    content: string;
    author: {
        id: string;
        username: string;
        avatar_url?: string;
        level: number;
    };
    createdAt: string;
    updatedAt?: string;
    media: any[];
    likeCount: number;
    commentCount: number;
    viewCount: number;
    isAuthor: boolean;
}

const { id, type, title, content, author, createdAt, updatedAt, media, likeCount, commentCount, viewCount, isAuthor } = Astro.props;
---

<article class="max-w-4xl mx-auto">
    <!-- 帖子头部 -->
    <header class="mb-6">
        <div class="flex items-start gap-4 mb-4">
            <div class="flex-shrink-0">
                <div class="w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white font-semibold">
                    {author.avatar_url ? (
                        <img src={author.avatar_url} alt={author.username} class="w-full h-full rounded-full object-cover" />
                    ) : (
                        author.username.charAt(0).toUpperCase()
                    )}
                </div>
            </div>
            <div class="flex-1">
                <div class="flex items-center gap-2 mb-1">
                    <h1 class="text-3xl font-bold text-white">{title}</h1>
                    {type === 'question' && (
                        <span class="px-3 py-1 text-sm bg-orange-500/20 text-orange-300 rounded-full">问答</span>
                    )}
                </div>
                <div class="flex items-center gap-4 text-sm text-gray-400">
                    <span class="flex items-center gap-1">
                        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd"/>
                        </svg>
                        {author.username}
                    </span>
                    <span class="flex items-center gap-1">
                        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                        </svg>
                        Lv.{author.level}
                    </span>
                    <span class="flex items-center gap-1">
                        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd"/>
                        </svg>
                        {new Date(createdAt).toLocaleDateString('zh-CN')}
                    </span>
                    {updatedAt && updatedAt !== createdAt && (
                        <span class="text-xs text-gray-500">
                            (编辑于 {new Date(updatedAt).toLocaleDateString('zh-CN')})
                        </span>
                    )}
                </div>
            </div>
            {isAuthor && (
                <div class="flex gap-2">
                    <button id="edit-btn" class="px-3 py-1 bg-blue-600 hover:bg-blue-700 rounded text-sm transition-colors">
                        编辑
                    </button>
                    <button id="delete-btn" class="px-3 py-1 bg-red-600 hover:bg-red-700 rounded text-sm transition-colors">
                        删除
                    </button>
                </div>
            )}
        </div>
        
        <!-- 统计信息 -->
        <div class="flex items-center gap-6 text-sm text-gray-400 border-b border-white/10 pb-4">
            <span class="flex items-center gap-1">
                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M2 10.5a1.5 1.5 0 113 0v6a1.5 1.5 0 01-3 0v-6zM6 10.333v5.43a2 2 0 001.106 1.79l.05.025A4 4 0 008.943 18h5.416a2 2 0 001.962-1.608l1.2-6A2 2 0 0015.56 8H12V4a2 2 0 00-2-2 1 1 0 00-1 1v.667a4 4 0 01-.8 2.4L6.8 7.933a4 4 0 00-.8 2.4z"/>
                </svg>
                {likeCount} 点赞
            </span>
            <span class="flex items-center gap-1">
                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M18 10c0 3.866-3.582 7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z" clip-rule="evenodd"/>
                </svg>
                {commentCount} 评论
            </span>
            <span class="flex items-center gap-1">
                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M10 12a2 2 0 100-4 2 2 0 000 4z"/>
                    <path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd"/>
                </svg>
                {viewCount} 浏览
            </span>
        </div>
    </header>

    <!-- 帖子内容 -->
    <div class="mb-6">
        <div class="prose prose-invert max-w-none mb-6">
            <div class="whitespace-pre-wrap text-gray-300 leading-relaxed">
                {content}
            </div>
        </div>
        
        <!-- 媒体文件 -->
        {media && media.length > 0 && (
            <div class="media-gallery mb-6">
                <h3 class="text-lg font-semibold mb-3">附件</h3>
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                    {media.map((item, index) => (
                        <div class="media-item">
                            {item.type?.startsWith('image') ? (
                                <img 
                                    src={item.url} 
                                    alt={`图片 ${index + 1}`}
                                    class="w-full h-48 object-cover rounded-lg cursor-pointer hover:opacity-90 transition-opacity"
                                    data-index={index}
                                />
                            ) : item.type?.startsWith('video') ? (
                                <video 
                                    src={item.url} 
                                    controls 
                                    class="w-full h-48 object-cover rounded-lg"
                                />
                            ) : (
                                <div class="w-full h-48 bg-white/10 rounded-lg flex items-center justify-center">
                                    <div class="text-center">
                                        <svg class="w-8 h-8 mx-auto mb-2" fill="currentColor" viewBox="0 0 20 20">
                                            <path fill-rule="evenodd" d="M4 4a2 2 0 00-2 2v8a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2H4zm0 2h12v8H4V6z" clip-rule="evenodd"/>
                                        </svg>
                                        <p class="text-sm">{item.name || '文件'}</p>
                                        <button 
                                            class="mt-2 px-3 py-1 bg-blue-600 hover:bg-blue-700 rounded text-xs transition-colors"
                                            onclick={`window.open('${item.url}', '_blank')`}
                                        >
                                            下载
                                        </button>
                                    </div>
                                </div>
                            )}
                        </div>
                    ))}
                </div>
            </div>
        )}
    </div>

    <!-- 操作按钮 -->
    <div class="flex gap-3 mb-6">
        <button id="like-btn" class="flex items-center gap-2 px-4 py-2 bg-white/10 hover:bg-white/20 rounded-lg transition-colors">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path d="M2 10.5a1.5 1.5 0 113 0v6a1.5 1.5 0 01-3 0v-6zM6 10.333v5.43a2 2 0 001.106 1.79l.05.025A4 4 0 008.943 18h5.416a2 2 0 001.962-1.608l1.2-6A2 2 0 0015.56 8H12V4a2 2 0 00-2-2 1 1 0 00-1 1v.667a4 4 0 01-.8 2.4L6.8 7.933a4 4 0 00-.8 2.4z"/>
            </svg>
            <span id="like-text">点赞</span>
        </button>
        <button id="favorite-btn" class="flex items-center gap-2 px-4 py-2 bg-white/10 hover:bg-white/20 rounded-lg transition-colors">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
            </svg>
            收藏
        </button>
        <button id="share-btn" class="flex items-center gap-2 px-4 py-2 bg-white/10 hover:bg-white/20 rounded-lg transition-colors">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path d="M15 8a3 3 0 10-2.977-2.63l-4.94 2.47a3 3 0 100 4.319l4.94 2.47a3 3 0 10.895-1.789l-4.94-2.47a3.027 3.027 0 000-.74l4.94-2.47C13.456 7.68 14.19 8 15 8z"/>
            </svg>
            分享
        </button>
        <button id="report-btn" class="flex items-center gap-2 px-4 py-2 bg-white/10 hover:bg-white/20 rounded-lg transition-colors">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"/>
            </svg>
            举报
        </button>
    </div>
</article>

<script>
    // 帖子详情交互逻辑
    document.addEventListener('DOMContentLoaded', () => {
        const likeBtn = document.getElementById('like-btn');
        const favoriteBtn = document.getElementById('favorite-btn');
        const shareBtn = document.getElementById('share-btn');
        const reportBtn = document.getElementById('report-btn');
        const editBtn = document.getElementById('edit-btn');
        const deleteBtn = document.getElementById('delete-btn');

        // 点赞功能
        likeBtn?.addEventListener('click', async () => {
            // 点赞逻辑将在页面级别处理
            const event = new CustomEvent('postLike', { detail: { postId: '{id}' } });
            document.dispatchEvent(event);
        });

        // 收藏功能
        favoriteBtn?.addEventListener('click', async () => {
            const event = new CustomEvent('postFavorite', { detail: { postId: '{id}' } });
            document.dispatchEvent(event);
        });

        // 分享功能
        shareBtn?.addEventListener('click', () => {
            if (navigator.share) {
                navigator.share({
                    title: '{title}',
                    url: window.location.href
                });
            } else {
                navigator.clipboard.writeText(window.location.href);
                alert('链接已复制到剪贴板');
            }
        });

        // 举报功能
        reportBtn?.addEventListener('click', () => {
            const reason = prompt('请输入举报原因：');
            if (reason) {
                const event = new CustomEvent('postReport', { 
                    detail: { postId: '{id}', reason } 
                });
                document.dispatchEvent(event);
            }
        });

        // 编辑功能
        editBtn?.addEventListener('click', () => {
            const event = new CustomEvent('postEdit', { detail: { postId: '{id}' } });
            document.dispatchEvent(event);
        });

        // 删除功能
        deleteBtn?.addEventListener('click', () => {
            if (confirm('确定要删除这个帖子吗？此操作不可撤销。')) {
                const event = new CustomEvent('postDelete', { detail: { postId: '{id}' } });
                document.dispatchEvent(event);
            }
        });

        // 图片预览功能
        const images = document.querySelectorAll('.media-item img');
        images.forEach(img => {
            img.addEventListener('click', () => {
                const imgElement = img as HTMLImageElement;
                const modal = document.createElement('div');
                modal.className = 'fixed inset-0 bg-black/80 flex items-center justify-center z-50';
                modal.innerHTML = `
                    <div class="max-w-4xl max-h-full p-4">
                        <img src="${imgElement.src}" class="max-w-full max-h-full object-contain" />
                    </div>
                `;
                modal.addEventListener('click', () => modal.remove());
                document.body.appendChild(modal);
            });
        });
    });
</script>
