---
import Logo from '../components/Logo.astro';

const navItems = [
    { linkText: '首页', href: '/', icon: '🏠' },
    { linkText: '新闻', href: '/news', icon: '📰' },
    { linkText: '社区', href: '/community', icon: '👥' },
    { linkText: '发帖/提问', href: '/compose', icon: '✍️' },
    { linkText: 'AI问答', href: '/ask', icon: '🤖' },
    { linkText: '消息', href: '/messages', icon: '💬' },
    { linkText: '个人中心', href: '/me', icon: '👤' },
    { linkText: '收藏', href: '/favorites', icon: '⭐' },
    { linkText: '反馈', href: '/feedback', icon: '📝' }
];

const secondaryNavItems = [
    { linkText: '登录', href: '/auth', icon: '🔐' }
];
---

<header class="sticky top-0 z-50 bg-white/95 backdrop-blur-sm border-b border-gray-200 shadow-sm">
    <div class="container-responsive">
        <nav class="flex items-center justify-between py-4">
            <!-- Logo -->
            <div class="flex items-center">
                <a href="/" class="flex items-center space-x-2 hover:opacity-80 transition-opacity">
                    <Logo />
                </a>
            </div>

            <!-- Desktop Navigation -->
            <div class="hidden lg:flex items-center space-x-1">
                {
                    navItems.map((item) => (
                        <a href={item.href} class="nav-link flex items-center space-x-1 px-3 py-2 rounded-lg text-sm font-medium" title={item.linkText}>
                            <span class="text-base">{item.icon}</span>
                            <span class="hidden xl:inline">{item.linkText}</span>
                        </a>
                    ))
                }
            </div>

            <!-- Secondary Navigation -->
            <div class="hidden md:flex items-center space-x-2">
                {
                    secondaryNavItems.map((item) => (
                        <a href={item.href} class="nav-link flex items-center space-x-1 px-3 py-2 rounded-lg text-sm font-medium" title={item.linkText}>
                            <span class="text-base">{item.icon}</span>
                            <span class="hidden lg:inline">{item.linkText}</span>
                        </a>
                    ))
                }
            </div>

            <!-- Mobile Menu Button -->
            <button
                id="mobile-menu-button"
                class="lg:hidden p-2 rounded-lg text-gray-700 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500"
                aria-label="打开菜单"
            >
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
                </svg>
            </button>
        </nav>

        <!-- Mobile Navigation -->
        <div id="mobile-menu" class="lg:hidden hidden border-t border-gray-200 bg-white">
            <div class="px-4 py-2 space-y-1">
                {
                    navItems.map((item) => (
                        <a href={item.href} class="nav-link flex items-center space-x-3 px-3 py-3 rounded-lg text-base font-medium">
                            <span class="text-lg">{item.icon}</span>
                            <span>{item.linkText}</span>
                        </a>
                    ))
                }
                <div class="border-t border-gray-200 pt-2 mt-2">
                    {
                        secondaryNavItems.map((item) => (
                            <a href={item.href} class="nav-link flex items-center space-x-3 px-3 py-3 rounded-lg text-base font-medium">
                                <span class="text-lg">{item.icon}</span>
                                <span>{item.linkText}</span>
                            </a>
                        ))
                    }
                </div>
            </div>
        </div>
    </div>
</header>

<script>
    // Mobile menu toggle
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');

    if (mobileMenuButton && mobileMenu) {
        mobileMenuButton.addEventListener('click', () => {
            const isHidden = mobileMenu.classList.contains('hidden');

            if (isHidden) {
                mobileMenu.classList.remove('hidden');
                mobileMenu.classList.add('animate-slide-up');
                mobileMenuButton.setAttribute('aria-label', '关闭菜单');
                mobileMenuButton.innerHTML = `
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                `;
            } else {
                mobileMenu.classList.add('hidden');
                mobileMenuButton.setAttribute('aria-label', '打开菜单');
                mobileMenuButton.innerHTML = `
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
                    </svg>
                `;
            }
        });

        // Close mobile menu when clicking outside
        document.addEventListener('click', (event) => {
            if (!mobileMenuButton?.contains(event.target as Node) && !mobileMenu?.contains(event.target as Node)) {
                mobileMenu?.classList.add('hidden');
                mobileMenuButton?.setAttribute('aria-label', '打开菜单');
                mobileMenuButton.innerHTML = `
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
                    </svg>
                `;
            }
        });
    }
</script>
