---
import Layout from '../layouts/Layout.astro';
import TabPanel from '../components/TabPanel.astro';
import PostCard from '../components/PostCard.astro';
import SortFilter from '../components/SortFilter.astro';

// 排序选项
const sortOptions = [
    { value: 'time', label: '最新发布' },
    { value: 'hot', label: '最热门' },
    { value: 'reply', label: '最新回复' }
];

// 分类选项
const filterOptions = [
    { value: 'tech', label: '技术' },
    { value: 'life', label: '生活' },
    { value: 'news', label: '新闻' },
    { value: 'other', label: '其他' }
];
---

<Layout title="社区：论坛 / 问答">
    <section class="max-w-4xl mx-auto">
        <div class="flex items-center justify-between mb-6">
            <h1 class="text-3xl font-bold">社区</h1>
            <a href="/compose" class="px-4 py-2 bg-blue-600 hover:bg-blue-700 rounded-lg transition-colors"> 发帖 / 提问 </a>
        </div>

        <TabPanel tabs={['论坛', '问答']} activeTab="论坛">
            <div class="mb-6">
                <SortFilter sortOptions={sortOptions} filterOptions={filterOptions} currentSort="time" currentFilter="" />
            </div>

            <div id="posts-list" class="space-y-4">
                <!-- 帖子列表将通过JavaScript动态加载 -->
            </div>

            <div id="loading" class="text-center py-8 text-gray-400 hidden">加载中...</div>

            <div id="empty" class="text-center py-8 text-gray-400 hidden">暂无内容</div>
        </TabPanel>
    </section>

    <script>
        import { getSupabaseClient } from '../lib/supabaseClient.js';
        const supabase = getSupabaseClient();

        let currentType = 'post';
        let currentSort = 'time';
        let currentFilter = '';
        let currentSearch = '';

        // 显示加载状态
        function showLoading() {
            document.getElementById('loading').classList.remove('hidden');
            document.getElementById('posts-list').classList.add('hidden');
            document.getElementById('empty').classList.add('hidden');
        }

        // 隐藏加载状态
        function hideLoading() {
            document.getElementById('loading').classList.add('hidden');
            document.getElementById('posts-list').classList.remove('hidden');
        }

        // 显示空状态
        function showEmpty() {
            document.getElementById('empty').classList.remove('hidden');
            document.getElementById('posts-list').classList.add('hidden');
            document.getElementById('loading').classList.add('hidden');
        }

        // 构建查询
        function buildQuery() {
            let query = supabase
                .from('posts')
                .select(
                    `
                    id,
                    title,
                    content,
                    created_at,
                    author_id,
                    profiles!posts_author_id_fkey(username),
                    like_count,
                    comment_count
                `
                )
                .eq('type', currentType);

            // 添加排序
            switch (currentSort) {
                case 'time':
                    query = query.order('created_at', { ascending: false });
                    break;
                case 'hot':
                    query = query.order('like_count', { ascending: false });
                    break;
                case 'reply':
                    query = query.order('updated_at', { ascending: false });
                    break;
            }

            // 添加筛选
            if (currentFilter) {
                query = query.eq('category', currentFilter);
            }

            // 添加搜索
            if (currentSearch) {
                query = query.or(`title.ilike.%${currentSearch}%,content.ilike.%${currentSearch}%`);
            }

            return query;
        }

        // 加载帖子列表
        async function loadPosts() {
            showLoading();

            try {
                const query = buildQuery();
                const { data, error } = await query;

                if (error) {
                    console.error('加载失败:', error);
                    alert('加载失败：' + error.message);
                    return;
                }

                hideLoading();

                const postsList = document.getElementById('posts-list');

                if (!data || data.length === 0) {
                    showEmpty();
                    return;
                }

                postsList.innerHTML = data
                    .map(
                        (post) => `
                    <div class="post-card" data-post-id="${post.id}">
                        <article class="p-4 bg-white/5 rounded-lg hover:bg-white/10 transition-colors">
                            <div class="flex items-start gap-3">
                                <div class="flex-shrink-0">
                                    <div class="w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white font-semibold">
                                        ${currentType === 'question' ? '?' : '💬'}
                                    </div>
                                </div>
                                <div class="flex-1 min-w-0">
                                    <div class="flex items-center gap-2 mb-2">
                                        <a href="/post/${post.id}" class="text-lg font-medium hover:underline text-white">
                                            ${post.title}
                                        </a>
                                        ${currentType === 'question' ? '<span class="px-2 py-1 text-xs bg-orange-500/20 text-orange-300 rounded">问答</span>' : ''}
                                    </div>
                                    <p class="text-gray-300 text-sm mb-3 line-clamp-2">
                                        ${(post.content || '').slice(0, 120)}...
                                    </p>
                                    <div class="flex items-center justify-between text-xs text-gray-400">
                                                                            <div class="flex items-center gap-4">
                                        <span>作者: ${post.profiles?.username || '匿名'}</span>
                                        <span>${new Date(post.created_at).toLocaleDateString('zh-CN')}</span>
                                    </div>
                                        <div class="flex items-center gap-3">
                                            <span class="flex items-center gap-1">
                                                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                                                    <path d="M2 10.5a1.5 1.5 0 113 0v6a1.5 1.5 0 01-3 0v-6zM6 10.333v5.43a2 2 0 001.106 1.79l.05.025A4 4 0 008.943 18h5.416a2 2 0 001.962-1.608l1.2-6A2 2 0 0015.56 8H12V4a2 2 0 00-2-2 1 1 0 00-1 1v.667a4 4 0 01-.8 2.4L6.8 7.933a4 4 0 00-.8 2.4z"/>
                                                </svg>
                                                ${post.like_count || 0}
                                            </span>
                                            <span class="flex items-center gap-1">
                                                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                                                    <path fill-rule="evenodd" d="M18 10c0 3.866-3.582 7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z" clip-rule="evenodd"/>
                                                </svg>
                                                ${post.comment_count || 0}
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </article>
                    </div>
                `
                    )
                    .join('');
            } catch (error) {
                console.error('加载失败:', error);
                hideLoading();
                showEmpty();
            }
        }

        // 监听标签页切换
        document.addEventListener('tabChange', (event: CustomEvent) => {
            const tab = event.detail.tab;
            currentType = tab === '问答' ? 'question' : 'post';
            loadPosts();
        });

        // 监听筛选变化
        document.addEventListener('filterChange', (event: CustomEvent) => {
            const { sort, filter, search } = event.detail;
            currentSort = sort;
            currentFilter = filter;
            currentSearch = search;
            loadPosts();
        });

        // 初始化加载
        loadPosts();
    </script>
</Layout>
